import com.bmuschko.gradle.nexus.NexusPlugin
import nebula.plugin.info.InfoPlugin
import nebula.plugin.info.scm.ScmInfoExtension

buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'com.netflix.nebula:gradle-info-plugin:4.0.3'
    }
}

apply plugin: NexusPlugin
apply plugin: InfoPlugin

def scminfo = project.extensions.getByType(ScmInfoExtension)

def repo = scminfo.origin.replaceAll('^git@github.com:(.+)/(.+)\\.git$') { all, owner, repo ->
    "https://github.com/$owner/$repo"
}

modifyPom {
    project {
        name project.name.split('-').collect { it.capitalize() }.join(' ')
        description project.description ?: project.name
        url repo
        inceptionYear(project.ext.has('inceptionYear') ? project.ext.getProperty('inceptionYear') : new Date().format('yyyy'))


        scm {
            url repo
            connection "scm:${repo}.git"
            developerConnection "scm:${repo}.git"
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'rahulsom'
                name 'Rahul Somasunderam'
                email 'rahul.som@gmail.com'
            }
        }

        issueManagement {
            system 'Github'
            url "${repo}/issues"
        }
    }
}

extraArchive {
    sources = true
    tests = false
    javadoc = false
}

nexus {
    sign = !version.toString().contains('-SNAPSHOT')
}

rootProject.tasks.getByName('release').dependsOn(project.tasks.uploadArchives)
rootProject.tasks.findByName('closeRepository').mustRunAfter(project.tasks.uploadArchives)
